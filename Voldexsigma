local function tweenProperty(object, properties, duration)
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(object, tweenInfo, properties)
    tween:Play()
end
local function speech(txt)
    local ts = game:GetService("TweenService")
    local Dialogue = Instance.new("BillboardGui")
    local Chat1 = Instance.new("Frame")
    local Sub = Instance.new("TextLabel")

    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    Dialogue.Active = true
    Dialogue.Size = UDim2.new(15, 0, 15, 0)
    Dialogue.StudsOffset = Vector3.new(0, 0, 2)
    Dialogue.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Dialogue.Name = "Dialogue"
    Dialogue.Parent = humanoidRootPart

    Chat1.AnchorPoint = Vector2.new(0.5, 0.5)
    Chat1.BackgroundColor3 = Color3.new(1, 1, 1)
    Chat1.BorderColor3 = Color3.new(0, 0, 0)
    Chat1.BorderSizePixel = 2
    Chat1.Position = UDim2.new(0.6, 0, -0.2, 0)
    Chat1.Size = UDim2.new(0.1, 0, 0.2, 0)
    Chat1.Name = "Chat1"
    Chat1.BackgroundTransparency = 1
    Chat1.Parent = Dialogue

    Sub.FontFace = Font.new("rbxassetid://12187375716", Enum.FontWeight.Bold, Enum.FontStyle.Italic)
    Sub.Text = txt
    Sub.TextColor3 = Color3.new(0, 0, 0)
    Sub.TextScaled = true
    Sub.TextSize = 14
    Sub.TextWrapped = true
    Sub.AnchorPoint = Vector2.new(0.5, 0.5)
    Sub.BackgroundColor3 = Color3.new(1, 1, 1)
    Sub.TextTransparency = 1
    Sub.BorderColor3 = Color3.new(0, 0, 0)
    Sub.BorderSizePixel = 0
    Sub.Position = UDim2.new(0.5, 0, 0.5, 0)
    Sub.Size = UDim2.new(0.85, 0, 0.35, 0)
    Sub.Name = "Sub"
    Sub.Parent = Chat1
    Sub.BackgroundTransparency = 1

    game.Debris:AddItem(Chat1, 25)
    game.Debris:AddItem(Sub, 25)

    local duration = 0.6 
    tweenProperty(Chat1, {BackgroundTransparency = 0}, duration)
    tweenProperty(Sub, {TextTransparency = 0}, duration)
    tweenProperty(Chat1, {Position = UDim2.new(0.6, 0, 0.4, 0)}, 0.6)
    task.wait(1.8)
    tweenProperty(Chat1, {BackgroundTransparency = 1}, 1.2)
    tweenProperty(Sub, {TextTransparency = 1}, 1.2)
end
local function speech2(txt2)
    local ts1 = game:GetService("TweenService")
    local Dialogue1 = Instance.new("BillboardGui")
    local Chat2 = Instance.new("Frame")
    local Sub_1 = Instance.new("TextLabel")

    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    -- Create the BillboardGui and position it above the player
    Dialogue1.Active = true
    Dialogue1.Size = UDim2.new(15, 0, 15, 0)
    Dialogue1.StudsOffset = Vector3.new(0, 3, 0) -- Adjusted to make it float above the character
    Dialogue1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Dialogue1.Name = "Dialogue1"
    Dialogue1.Parent = humanoidRootPart

    Chat2.AnchorPoint = Vector2.new(0.5, 0.5)
    Chat2.BackgroundColor3 = Color3.new(1, 1, 1)
    Chat2.BorderColor3 = Color3.new(0, 0, 0)
    Chat2.BorderSizePixel = 2
    Chat2.Position = UDim2.new(0.35, 0, 1.0, 0) 
    Chat2.Size = UDim2.new(0.1, 0, 0.2, 0)
    Chat2.Name = "Chat2"
    Chat2.Parent = Dialogue1
    Chat2.BackgroundTransparency = 1

    Sub_1.FontFace = Font.new("rbxassetid://12187375716", Enum.FontWeight.Bold, Enum.FontStyle.Italic)
    Sub_1.Text = txt2
    Sub_1.TextColor3 = Color3.new(0, 0, 0)
    Sub_1.TextScaled = true
    Sub_1.TextSize = 14
    Sub_1.TextWrapped = true
    Sub_1.AnchorPoint = Vector2.new(0.5, 0.5)
    Sub_1.BackgroundColor3 = Color3.new(1, 1, 1)
    Sub_1.BackgroundTransparency = 1
    Sub_1.TextTransparency = 1
    Sub_1.BorderColor3 = Color3.new(0, 0, 0)
    Sub_1.BorderSizePixel = 0
    Sub_1.Position = UDim2.new(0.5, 0, 0.5, 0)
    Sub_1.Size = UDim2.new(0.85, 0, 0.5, 0)
    Sub_1.Name = "Sub_1"
    Sub_1.Parent = Chat2

    game.Debris:AddItem(Chat2, 25)
    game.Debris:AddItem(Sub_1, 25)

    local duration = 0.6 

    -- Fade in the chat bubble
    tweenProperty(Chat2, {BackgroundTransparency = 0}, duration)
    tweenProperty(Sub_1, {TextTransparency = 0}, duration)

    -- Move the bubble slightly upward
    tweenProperty(Chat2, {Position = UDim2.new(0.36, 0, 0.7, 0)}, 0.6)

    -- Wait for a short period to display the message
    task.wait(1.8)

    -- Fade out the bubble and text
    tweenProperty(Chat2, {BackgroundTransparency = 1}, 1.2)
    tweenProperty(Sub_1, {TextTransparency = 1}, 1.2)
end


loadstring(game:HttpGet("https://pastebin.com/raw/GBCysGn6",true))()


loadstring(game:HttpGet("https://pastebin.com/raw/zNsVRkYe",true))()


loadstring(game:HttpGet("https://pastebin.com/raw/hMUkUzKn",true))()


loadstring(game:HttpGet("https://pastebin.com/raw/XBNwhJDc",true))()


--Move & Ultimate Names

local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("1").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Limitless Combo"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("2").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Heavenly Slamdown"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("3").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Technique Red"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("4").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Maximum Blue Counter"


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")


local function findGuiAndSetText()

    local screenGui = playerGui:FindFirstChild("ScreenGui")

    if screenGui then

        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")

        if magicHealthFrame then

            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")

            if textLabel then

                textLabel.Text = "Honored One"

            end

        end

    end

end


playerGui.DescendantAdded:Connect(findGuiAndSetText)

findGuiAndSetText()

--[[Animations]]

--[[move 1]]

local animationId = 12273188754


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13560306510"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0.1)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.9)
speech("Limitless Barrage!")
local s = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s.SoundId = "rbxassetid://7147847068"
s.Volume = 5
s.PlaybackSpeed = 1.7
s.TimePosition = 0
s:Play()
local s1 = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s1.SoundId = "rbxassetid://7147847068"
s1.Volume = 5
s1.PlaybackSpeed = 1
s1.TimePosition = 0
s1:Play()
task.wait(0.4)

local AnimAnim2 = Instance.new("Animation")

AnimAnim2.AnimationId = "rbxassetid://81827172076105"

local Anim2 = Humanoid:LoadAnimation(AnimAnim2)


local startTime = 0


Anim:Stop()

Anim2:Play()

Anim2:AdjustSpeed(0)

Anim2.TimePosition = startTime

Anim2:AdjustSpeed(2)
local Test = game.ReplicatedStorage.Resources.KJEffects.lastkick.Attachment
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = true
    end
end

wait(0.8)
test:destroy()

    end

end

--[[END OF MOVE 1 ANIM]]

--[[Move 2]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12296113986


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13633468484"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(2.2)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)
local s = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s.SoundId = "rbxassetid://85025352633453"
s.Volume = 5
s.PlaybackSpeed = 1.7
s.TimePosition = 0
s:Play()
local s1 = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s1.SoundId = "rbxassetid://85025352633453"
s1.Volume = 5
s1.PlaybackSpeed = 1
s1.TimePosition = 0
s1:Play()
local Test =  game.ReplicatedStorage.Resources.KJEffects.DropkickExtra.firstHit.Attachment

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character["HumanoidRootPart"]


for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        
        child.Color = ColorSequence.new(Color3.new(0, 255, 255))
        child:Emit(15)
        child.Enabled = true
    end
end

wait(1)
test:destroy()
local Test = game.ReplicatedStorage.Emotes.VFX.RealAssets.Humiliation.Part.Necksnap
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = true
    end
end

wait(1)
test:destroy()
   end

end

--[[END OF MOVE 2 ANIM]]

--[[Move 3]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12309835105


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://14498295360"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.3


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)
speech("Reversal Red!!")
local s = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s.SoundId = "rbxassetid://114219438298857"
s.Volume = 5
s.PlaybackSpeed = 1.7
s.TimePosition = 0
s:Play()
local s1 = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s1.SoundId = "rbxassetid://114219438298857"
s1.Volume = 5
s1.PlaybackSpeed = 1
s1.TimePosition = 0
s1:Play()

local Test = game.ReplicatedStorage.Emotes.BladesOfJade.JadeL.Handle.VFX



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end


wait(0.9)
test:destroy()
local Test = game.ReplicatedStorage.Emotes.VFX.VfxMods.FS.vfx.RedScreen.Attachment



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end

wait(0.9)
test:destroy()


local Test = game.ReplicatedStorage.Emotes.redEnergy.Attachment



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end


wait(0.9)
test:destroy()


local Test = game.ReplicatedStorage.Resources.thissongbangs.AkaArm.Red.Attachment



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end


wait(0.8)
test:destroy()


delay(1.8, function()

    Anim:Stop()

end)


    end

end

--[[END OF MOVE 3 ANIM]]

--[[Move 4]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 13603396939


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15121659862"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.2)
speech("Amplicfication Blue!!")
local s = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s.SoundId = "rbxassetid://99104984317157"
s.Volume = 5
s.PlaybackSpeed = 1.7
s.TimePosition = 0
s:Play()
local s1 = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s1.SoundId = "rbxassetid://99104984317157"
s1.Volume = 5
s1.PlaybackSpeed = 1
s1.TimePosition = 0
s1:Play()


local Test = game.ReplicatedStorage.Emotes.VFX.VfxMods.FS.vfx.BigAuraFx.Attachment
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = true
    end
end

wait(1)
test:destroy()
local Test = game.ReplicatedStorage.Resources.Sorcerer.LimitlessBarrier.Core.Attachment
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = true
    end
end

wait(1)
test:destroy()
local Test = game.ReplicatedStorage.Emotes.VFX.RealAssets.SwordEmote.part.HelpCall
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child:Emit(15)
        child.Enabled = true
    end
end

wait(1)
test:destroy()


local Test = game.ReplicatedStorage.Resources.thissongbangs.BluebERR.Attachment



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end


wait(1)
test:destroy()
    end

end

--[[END OF MOVE 4 ANIM]]

--[[Wall combo]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 16310343179


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18903642853"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.05


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


local Test = game.ReplicatedStorage.Resources.Sorcerer.WallFX.Final.Attachment



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end


wait(1)
test:destroy()


local Test = game.ReplicatedStorage.Resources.Sorcerer.WallFX.Final.At



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end


wait(1)
test:destroy()


local Test = game.ReplicatedStorage.Resources.Sorcerer.WallFX.Final.Attachment



local test = Test:Clone()

test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")



for _, child in ipairs(test:GetChildren()) do

    if child:IsA("ParticleEmitter") then

        child:Emit(15)

        child.Enabled = true

    end

end


wait(1)
test:destroy()

    end

end

--[[END OF WALL COMBO ANIM]]

--[[4th move miss]]

local animationId = 12351854556


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12618292188"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0.1)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.8)
speech("Hah")

    end

end

--[[END OF 4th MOVE  missANIM]]

--[[Ult Activation]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12342141464


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15507137974 "

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.5)
speech("i alone am") speech("The honored one!!")
local s = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s.SoundId = "rbxassetid://17801287827"
s.Volume = 5
s.PlaybackSpeed = 1.7
s.TimePosition = 0
s:Play()
local s1 = Instance.new("Sound", game.Players.LocalPlayer.Character.HumanoidRootPart)
s1.SoundId = "rbxassetid://17801287827"
s1.Volume = 5
s1.PlaybackSpeed = 1
s1.TimePosition = 0
s1:Play()
task.wait(2.9)

local AnimAnim2 = Instance.new("Animation")

AnimAnim2.AnimationId = "rbxassetid://113201609340793"

local Anim2 = Humanoid:LoadAnimation(AnimAnim2)


local startTime = 0


Anim:Stop()

Anim2:Play()

Anim2:AdjustSpeed(0)

Anim2.TimePosition = startTime

Anim2:AdjustSpeed(1.3)

    end

end
--[[END OF ULT ACTIVATION ANIM]]

--[[Dash]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13294790250"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)


delay(1.8, function()

    Anim:Stop()

end)


    end

end

--[[END OF DASH ANIM]]

--[[Uppercut]]
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://14900168720"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1.3


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.7)


    end

end

--[[END OF UPPERCUT ANIM]]

--[[Downslam]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://12447247483"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


wait(0.2)

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(6)


    end

end

--[[END OF DOWNSLAM ANIM]]

--[[Punch anims]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local animationIdsToStop = {

    [17859015788] = true, --downslam finisher

    [13532562418] = true, --punch1

    [13532600125] = true, --punch2

    [13532604085] = true, --punch3

    [13294471966] = true, --punch4

}


local replacementAnimations = {

    ["13532562418"] = "rbxassetid://17889458563", --punch1

    ["13532600125"] = "rbxassetid://17889461810", --punch2

    ["13532604085"] = "rbxassetid://17889471098", --punch3

    ["13294471966"] = "rbxassetid://17889290569", --punch4

    ["17859015788"] = "rbxassetid://12684185971", --downslam finisher

    ["11365563255"] = "rbxassetid://14516273501" --punch idk

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end) 

--[[Adding Quote or Message when Executed]]

local player = game.Players.LocalPlayer
repeat wait() until player.Character
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Messages to send
speech("im") speech("Gojo satarou")

local function sendMessage(text)
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, "All")
end

for _, message in ipairs(messages) do
    sendMessage(message)
    wait(1.7) -- Wait time for each message
end

--[[END OF QUOTES]]

--[[Idle Animation]]

local animationId = "rbxassetid://" -- Replace with your animation ID
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:FindFirstChildOfClass("Animator") or humanoid:WaitForChild("Animator")

local animation = Instance.new("Animation")
animation.AnimationId = animationId
local animationTrack = animator:LoadAnimation(animation)

local function isMoving()
    local velocity = humanoid.MoveDirection.Magnitude
    return velocity > 0
end

while true do
    if not isMoving() then
        if not animationTrack.IsPlaying then
            animationTrack:Play()
        end
    else
        if animationTrack.IsPlaying then
            animationTrack:Stop()
        end
    end
    wait(0.1)
end


--[[END OF IDLE ANIM]]

--[[Run Anim]]

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

local animationId = "rbxassetid://15962326593" -- Replace with your animation ID
local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack
local isMoving = false

local function playAnimation()
    if not animationTrack then
        animationTrack = animator:LoadAnimation(animation)
    end
    
    if not isMoving then
        isMoving = true
        animationTrack:Play()
    end
end

local function stopAnimation()
    if isMoving and animationTrack then
        isMoving = false
        animationTrack:Stop()
    end
end

local function onHumanoidChanged()
    if humanoid.MoveDirection.Magnitude > 0 then
        playAnimation()
    else
        stopAnimation()
    end
end

humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)

onHumanoidChanged()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

local animationId = "rbxassetid://15962326593" -- Replace with your animation ID
local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack
local isMoving = false

local function playAnimation()
    if not animationTrack then
        animationTrack = animator:LoadAnimation(animation)
    end
    
    if not isMoving then
        isMoving = true
        animationTrack:Play()
    end
end

local function stopAnimation()
    if isMoving and animationTrack then
        isMoving = false
        animationTrack:Stop()
    end
end

local function onHumanoidChanged()
    if humanoid.MoveDirection.Magnitude > 0 then
        playAnimation()
    else
        stopAnimation()
    end
end

humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)

onHumanoidChanged()
humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

local animationId = "rbxassetid://15962326593" -- Replace with your animation ID
local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack
local isMoving = false

local function playAnimation()
    if not animationTrack then
        animationTrack = animator:LoadAnimation(animation)
    end
    
    if not isMoving then
        isMoving = true
        animationTrack:Play()
    end
end

local function stopAnimation()
    if isMoving and animationTrack then
        isMoving = false
        animationTrack:Stop()
    end
end

local function onHumanoidChanged()
    if humanoid.MoveDirection.Magnitude > 0 then
        playAnimation()
    else
        stopAnimation()
    end
end

humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)

onHumanoidChanged()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

local animationId = "rbxassetid://15962326593" -- Replace with your animation ID
local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack
local isMoving = false

local function playAnimation()
    if not animationTrack then
        animationTrack = animator:LoadAnimation(animation)
    end
    
    if not isMoving then
        isMoving = true
        animationTrack:Play()
    end
end

local function stopAnimation()
    if isMoving and animationTrack then
        isMoving = false
        animationTrack:Stop()
    end
end

local function onHumanoidChanged()
    if humanoid.MoveDirection.Magnitude > 0 then
        playAnimation()
    else
        stopAnimation()
    end
end

humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)

onHumanoidChanged()

humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

local animationId = "rbxassetid://15962326593" -- Replace with your animation ID
local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack
local isMoving = false

local function playAnimation()
    if not animationTrack then
        animationTrack = animator:LoadAnimation(animation)
    end
    
    if not isMoving then
        isMoving = true
        animationTrack:Play()
    end
end

local function stopAnimation()
    if isMoving and animationTrack then
        isMoving = false
        animationTrack:Stop()
    end
end

local function onHumanoidChanged()
    if humanoid.MoveDirection.Magnitude > 0 then
        playAnimation()
    else
        stopAnimation()
    end
end

humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)

onHumanoidChanged()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local animator = humanoid:WaitForChild("Animator")

local animationId = "rbxassetid://15962326593" -- Replace with your animation ID
local animation = Instance.new("Animation")
animation.AnimationId = animationId

local animationTrack
local isMoving = false

local function playAnimation()
    if not animationTrack then
        animationTrack = animator:LoadAnimation(animation)
    end
    
    if not isMoving then
        isMoving = true
        animationTrack:Play()
    end
end

local function stopAnimation()
    if isMoving and animationTrack then
        isMoving = false
        animationTrack:Stop()
    end
end

local function onHumanoidChanged()
    if humanoid.MoveDirection.Magnitude > 0 then
        playAnimation()
    else
        stopAnimation()
    end
end

humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(onHumanoidChanged)

onHumanoidChanged()

--[[RUN ANIM END]]

--[[Execute Anims (Animations when you execute script]]

local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")

for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end

local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://113201609340793" -- Replace with your animation ID

local Anim = Humanoid:LoadAnimation(AnimAnim)

local startTime = 0.05

Anim:Play()
Anim:AdjustSpeed(0)
Anim.TimePosition = startTime
Anim:AdjustSpeed(1)

--[[END OF EXECUTE ANIMS]]

--[[Garou Color Changer !DELETE IF NOT NEEDED!]]

--[[LEFT ARM COLORS]]

local char = game.Players.LocalPlayer.Character
getgenv().LArmCol = char['Left Arm'].ChildAdded:Connect(function(pp)
if pp.Name == 'WaterPalm' then
for i,v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
v.Color =
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(0, 255, 255)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0, 255, 255))} -- Change Color (Red, Green, Blue)
end

pp:WaitForChild('WaterTrail').Color = 
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(0, 255, 255)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0, 255, 255))} -- Change Color (Red, Green, Blue)

end end)
--[[RIGHT ARM colors]]

getgenv().RArmCol = char['Right Arm'].ChildAdded:Connect(function(pp)
if pp.Name == 'WaterPalm' then
for i,v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
v.Color =
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(0, 255, 255)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0,255, 255))} -- Change Color (Red, Green, Blue)
end
pp:WaitForChild('WaterTrail').Color = 
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(0, 255, 255)), -- Change Color (Red, Green, Blue) 
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0, 255, 255))} -- Change Color (Red, Green, Blue)

end end)

--[[END OF GAROU COLORS]]

